version: 2.1

orbs:
  node: circleci/node@5.0.2

commands:
  await-previous-builds:
    parameters:
      branch:
        description: The branch to wait on
        type: string
    steps:
      - queue/until_front_of_line:
          time: "30" # how long a queue will wait until the job exits
          only-on-branch: <<parameters.branch>> # restrict queueing to a specific branch (default *)

  install-node:
    steps:
      - run:
          name: Install Node 14 (Required for Yarn)
          command: |
            set +e
            touch $BASH_ENV
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash
            echo "HOMEBREW_NO_AUTO_UPDATE=1" >> $BASH_ENV
            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
            echo 'nvm install v14.17.1' >> $BASH_ENV
            echo 'nvm alias default v14.17.1' >> $BASH_ENV
            sudo mkdir ~/.config
            sudo chown -R $USER:$GROUP ~/.config

  setup-awscli:
    steps:
      - run:
          name: "Set up aws cli not installed"
          command: scripts/setup-awscli

  generate-checksums:
    steps:
      - run:
          name: "Generate initial checksum manifests"
          command: |
            mkdir .manifests
            scripts/generate-manifest.js .manifests/node_modules '^yarn\.lock$' '^patches/' '^package\.json$'
            scripts/generate-manifest.js .manifests/cocoapods '^Podfile' '^Gemfile'

  install-node-modules:
    steps:
      - restore_cache:
          keys:
            - v1-node_modules-{{ checksum ".manifests/node_modules" }}-{{ arch }}
      - run:
          name: Install node modules
          command: ls node_modules || yarn install
      - save_cache:
          key: v1-node_modules-{{ checksum ".manifests/node_modules" }}-{{ arch }}
          paths:
            - node_modules

  install-gems:
    steps:
      - restore_cache:
          keys:
            - v1-gems-{{ checksum "Gemfile.lock" }}-{{ arch }}
      - run:
          name: Bundle install
          command: bundle check || bundle install
          environment:
            BUNDLE_JOBS: 4
            BUNDLE_RETRY: 3
      - save_cache:
          key: v1-gems-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - .vendor

  install-cocoapods:
    steps:
      - restore_cache:
          keys:
            - v1-pods-{{ checksum ".manifests/cocoapods" }}
      - run:
          name: Install Pods
          command: cd ios; bundle exec pod check --ignore-dev-pods || bundle exec pod install; cd ..;
      - save_cache:
          key: v1-pods-{{ checksum ".manifests/cocoapods" }}
          paths:
            - ios/Pods
            # this changes after pod install because we don't install dev tools on CI
            # so we save it to the cache to avoid comparison errors with Pods/Manifest.lock
            - ios/Podfile.lock

  build-app-ios:
    steps:
      - restore_cache:
          keys:
            - v1-app_build_ios-{{ checksum ".manifests/app_build" }}
      - run:
          name: Download fonts from s3
          command: ./scripts/download-fonts
      - run:
          name: Build App
          command: ./scripts/ci-ios
      - save_cache:
          key: v1-app_build_ios-{{ checksum ".manifests/app_build" }}
          paths:
            - derived_data
            - node_modules/react-native-config

jobs:
  deploy-nightly-beta:
    environment:
      BUNDLE_PATH: .vendor # path to install gems and use for caching

    macos:
      xcode: 13.4.1

    steps:
      - checkout
      - install-node
      - run:
          name: Deploy beta
          command: ./scripts/deploy-beta-ios

  build-beta-ios:
    environment:
      BUNDLE_PATH: .vendor # path to install gems and use for caching

    macos:
      xcode: 13.4.1

    steps:
      - checkout
      - install-node
      - generate-checksums
      - setup-awscli
      - install-node-modules
      - install-gems
      - install-cocoapods
      - build-app-ios
      - run:
          name: Run tests if native code has changed
          command: ls xcode_test_raw.log || ./scripts/ci-test-ios
      - await-previous-builds:
          branch: beta-ios
      - run:
          name: Deploy if beta
          no_output_timeout: 20m
          command: ./scripts/deploy-if-beta-branch-ios

workflows:
  nightly:
    triggers:
      - schedule:
          cron: "0 6 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - deploy-nightly-beta

  build-deploy:
    jobs:
      - build-beta-ios:
          filters:
            branches:
              only:
                - main
